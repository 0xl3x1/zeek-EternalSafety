module EternalSafety;

# Relevant SMBv1 commands
const SMB_COM_NT_TRANSACT = 0xA0;
const SMB_COM_NT_TRANSACT_SECONDARY = 0xA1;
const SMB_COM_TRANSACTION = 0x25;
const SMB_COM_TRANSACTION_SECONDARY = 0x26;
const SMB_COM_TRANSACTION2 = 0x32;
const SMB_COM_TRANSACTION2_SECONDARY = 0x33;
const SMB_COM_LOCKING_ANDX = 0x24;
const SMB_COM_WRITE_ANDX = 0x2F;

# The set of all SMBv1 transaction commands
const SMB_ALL_TRANS_CMDS = {
    SMB_COM_NT_TRANSACT,
    SMB_COM_NT_TRANSACT_SECONDARY,
    SMB_COM_TRANSACTION,
    SMB_COM_TRANSACTION_SECONDARY,
    SMB_COM_TRANSACTION2,
    SMB_COM_TRANSACTION2_SECONDARY,
};

# Unimplemented/reserved primary commands
# See: https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/32b5d4b7-d90b-483f-ad6a-003fd110f0ec
const SMB_COM_QUERY_SERVER        = 0x21;
const SMB_COM_IOCTL_SECONDARY     = 0x28;
const SMB_COM_NEW_FILE_SIZE       = 0x30;
const SMB_COM_CLOSE_AND_TREE_DISC = 0x31;
const SMB_COM_FIND_NOTIFY_CLOSE   = 0x35;
const SMB_COM_READ_BULK           = 0xD8;
const SMB_COM_WRITE_BULK          = 0xD9;
const SMB_COM_WRITE_BULK_DATA     = 0xDA;

# Set of all SMBv1 commands that are unused and/or unimplemented
const SMB_COM_UNUSED = {
    SMB_COM_QUERY_SERVER,
    SMB_COM_IOCTL_SECONDARY,
    SMB_COM_NEW_FILE_SIZE,
    SMB_COM_CLOSE_AND_TREE_DISC,
    SMB_COM_FIND_NOTIFY_CLOSE,
    SMB_COM_READ_BULK,
    SMB_COM_WRITE_BULK,
    SMB_COM_WRITE_BULK_DATA,

    # Unused command regions:
    # (From here:
    # https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/32b5d4b7-d90b-483f-ad6a-003fd110f0ec)
    0x15, 0x16, 0x17, 0x18, 0x19,

    0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, 0x40,
    0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b,
    0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56,
    0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,

    0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d,

    0x7f,

    0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
    0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a,
    0x9b, 0x9c, 0x9d, 0x9e, 0x9f,

    0xA3,

    0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf, 0xb0,
    0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb,
    0xbc, 0xbd, 0xbe, 0xbf,

    0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce,
    0xcf,

    0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5,
    0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0,
    0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb,
    0xfc, 0xfd,
};

# Unimplemented TXn subcommands
# See: https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/14937ad8-38af-4c74-9604-ddb8470d0ed9

# for SMB_COM_TRANSACTION2:
const TRANS2_SET_FS_INFORMATION       = 0x0004;
const TRANS2_FSCTL                    = 0x0009;
const TRANS2_IOCTL2                   = 0x000a;
const TRANS2_SESSION_SETUP            = 0x000e;
const TRANS2_REPORT_DFS_INCONSISTENCY = 0x0011;

const TRANS2_UNUSED = {
    TRANS2_SET_FS_INFORMATION,
    TRANS2_FSCTL,
    TRANS2_IOCTL2,
    TRANS2_SESSION_SETUP,
    TRANS2_REPORT_DFS_INCONSISTENCY,
};

# TODO: implement these once Zeek has finished implementing full SMBv1
#       support, including for NT_TRANSACT subcommands
# for SMB_COM_NT_TRANSACT:
# const NT_TRANSACT_RENAME = 0x0005;

# const NT_TRANSACT_UNUSED = {
#     NT_TRANSACT_RENAME,
# };
